package com.catl.integration.pi.part.disable;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import wt.services.applicationcontext.implementation.ServiceProperties;
import wt.util.WTException;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035 Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SI_FAECreateOutService", targetNamespace = "http://atlbattery.com/PLM/ZFAEP")
public class SIFAECreateOutService extends Service {

	private final static URL SIFAECREATEOUTSERVICE_WSDL_LOCATION;
	private final static WebServiceException SIFAECREATEOUTSERVICE_EXCEPTION;
	private final static QName SIFAECREATEOUTSERVICE_QNAME = new QName("http://atlbattery.com/PLM/ZFAEP", "SI_FAECreateOutService");

	static {
		Properties props = null;
		try {
			props = ServiceProperties.getServiceProperties("WTServiceProviderFromProperties");
		} catch (WTException e) {
			e.printStackTrace();
		}
		String wsdl = props.getProperty("sap.disablePart.address");
		System.out.println("SI_FAECreateOutService wsdl:" + wsdl);

		URL url = null;
		WebServiceException e = null;
		try {
			url = new URL(wsdl);
		} catch (MalformedURLException ex) {
			e = new WebServiceException(ex);
		}
		SIFAECREATEOUTSERVICE_WSDL_LOCATION = url;
		SIFAECREATEOUTSERVICE_EXCEPTION = e;
	}

	public SIFAECreateOutService() {
		super(__getWsdlLocation(), SIFAECREATEOUTSERVICE_QNAME);
	}

	public SIFAECreateOutService(WebServiceFeature... features) {
		super(__getWsdlLocation(), SIFAECREATEOUTSERVICE_QNAME, features);
	}

	public SIFAECreateOutService(URL wsdlLocation) {
		super(wsdlLocation, SIFAECREATEOUTSERVICE_QNAME);
	}

	public SIFAECreateOutService(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, SIFAECREATEOUTSERVICE_QNAME, features);
	}

	public SIFAECreateOutService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public SIFAECreateOutService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns SIFAECreateOut
	 */
	@WebEndpoint(name = "HTTP_Port")
	public SIFAECreateOut getHTTPPort() {
		return super.getPort(new QName("http://atlbattery.com/PLM/ZFAEP", "HTTP_Port"), SIFAECreateOut.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default values.
	 * @return returns SIFAECreateOut
	 */
	@WebEndpoint(name = "HTTP_Port")
	public SIFAECreateOut getHTTPPort(WebServiceFeature... features) {
		return super.getPort(new QName("http://atlbattery.com/PLM/ZFAEP", "HTTP_Port"), SIFAECreateOut.class, features);
	}

	/**
	 * 
	 * @return returns SIFAECreateOut
	 */
	@WebEndpoint(name = "HTTPS_Port")
	public SIFAECreateOut getHTTPSPort() {
		return super.getPort(new QName("http://atlbattery.com/PLM/ZFAEP", "HTTPS_Port"), SIFAECreateOut.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default values.
	 * @return returns SIFAECreateOut
	 */
	@WebEndpoint(name = "HTTPS_Port")
	public SIFAECreateOut getHTTPSPort(WebServiceFeature... features) {
		return super.getPort(new QName("http://atlbattery.com/PLM/ZFAEP", "HTTPS_Port"), SIFAECreateOut.class, features);
	}

	private static URL __getWsdlLocation() {
		if (SIFAECREATEOUTSERVICE_EXCEPTION != null) {
			throw SIFAECREATEOUTSERVICE_EXCEPTION;
		}
		return SIFAECREATEOUTSERVICE_WSDL_LOCATION;
	}

}
